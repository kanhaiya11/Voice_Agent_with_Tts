{"version":3,"sources":["../../src/stream/merge_readable_streams.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2025 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { ReadableStream } from 'node:stream/web';\nimport { withResolvers } from '../utils.js';\n\n// Adapted from https://github.com/denoland/std/blob/main/streams/merge_readable_streams.ts\n// we manually adapted to make ReadableStream<T> typing compatible with our current node\n// version as well as typescript configuration\nexport function mergeReadableStreams<T>(...streams: ReadableStream<T>[]): ReadableStream<T> {\n  const resolvePromises = streams.map(() => withResolvers<void>());\n  return new ReadableStream<T>({\n    start(controller) {\n      let mustClose = false;\n      Promise.all(resolvePromises.map(({ promise }) => promise))\n        .then(() => {\n          controller.close();\n        })\n        .catch((error) => {\n          mustClose = true;\n          controller.error(error);\n        });\n      for (const [index, stream] of streams.entries()) {\n        (async () => {\n          try {\n            for await (const data of stream) {\n              if (mustClose) {\n                break;\n              }\n              controller.enqueue(data);\n            }\n            resolvePromises[index]!.resolve();\n          } catch (error) {\n            resolvePromises[index]!.reject(error);\n          }\n        })();\n      }\n    },\n  });\n}\n"],"mappings":"AAGA,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAKvB,SAAS,wBAA2B,SAAiD;AAC1F,QAAM,kBAAkB,QAAQ,IAAI,MAAM,cAAoB,CAAC;AAC/D,SAAO,IAAI,eAAkB;AAAA,IAC3B,MAAM,YAAY;AAChB,UAAI,YAAY;AAChB,cAAQ,IAAI,gBAAgB,IAAI,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EACtD,KAAK,MAAM;AACV,mBAAW,MAAM;AAAA,MACnB,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,oBAAY;AACZ,mBAAW,MAAM,KAAK;AAAA,MACxB,CAAC;AACH,iBAAW,CAAC,OAAO,MAAM,KAAK,QAAQ,QAAQ,GAAG;AAC/C,SAAC,YAAY;AACX,cAAI;AACF,6BAAiB,QAAQ,QAAQ;AAC/B,kBAAI,WAAW;AACb;AAAA,cACF;AACA,yBAAW,QAAQ,IAAI;AAAA,YACzB;AACA,4BAAgB,KAAK,EAAG,QAAQ;AAAA,UAClC,SAAS,OAAO;AACd,4BAAgB,KAAK,EAAG,OAAO,KAAK;AAAA,UACtC;AAAA,QACF,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF,CAAC;AACH;","names":[]}