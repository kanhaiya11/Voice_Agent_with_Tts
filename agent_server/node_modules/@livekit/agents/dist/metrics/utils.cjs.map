{"version":3,"sources":["../../src/metrics/utils.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { log } from '../log.js';\nimport type { AgentMetrics } from './base.js';\n\nfunction roundTwoDecimals(value: number) {\n  return Math.round(value * 100) / 100;\n}\n\nexport const logMetrics = (metrics: AgentMetrics) => {\n  const logger = log();\n  if (metrics.type === 'llm_metrics') {\n    logger\n      .child({\n        ttft: roundTwoDecimals(metrics.ttft),\n        inputTokens: metrics.promptTokens,\n        promptCachedTokens: metrics.promptCachedTokens,\n        outputTokens: metrics.completionTokens,\n        tokensPerSecond: roundTwoDecimals(metrics.tokensPerSecond),\n      })\n      .info('LLM metrics');\n  } else if (metrics.type === 'realtime_model_metrics') {\n    logger\n      .child({\n        ttft: roundTwoDecimals(metrics.ttft),\n        input_tokens: metrics.inputTokens,\n        cached_input_tokens: metrics.inputTokenDetails.cachedTokens,\n        output_tokens: metrics.outputTokens,\n        total_tokens: metrics.totalTokens,\n        tokens_per_second: roundTwoDecimals(metrics.tokensPerSecond),\n      })\n      .info('RealtimeModel metrics');\n  } else if (metrics.type === 'tts_metrics') {\n    logger\n      .child({\n        ttfb: roundTwoDecimals(metrics.ttfb),\n        audioDuration: metrics.audioDuration,\n      })\n      .info('TTS metrics');\n  } else if (metrics.type === 'eou_metrics') {\n    logger\n      .child({\n        end_of_utterance_delay: roundTwoDecimals(metrics.endOfUtteranceDelay),\n        transcription_delay: roundTwoDecimals(metrics.transcriptionDelay),\n      })\n      .info('EOU metrics');\n  } else if (metrics.type === 'stt_metrics') {\n    logger\n      .child({\n        audioDuration: metrics.audioDuration,\n      })\n      .info('STT metrics');\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,iBAAoB;AAGpB,SAAS,iBAAiB,OAAe;AACvC,SAAO,KAAK,MAAM,QAAQ,GAAG,IAAI;AACnC;AAEO,MAAM,aAAa,CAAC,YAA0B;AACnD,QAAM,aAAS,gBAAI;AACnB,MAAI,QAAQ,SAAS,eAAe;AAClC,WACG,MAAM;AAAA,MACL,MAAM,iBAAiB,QAAQ,IAAI;AAAA,MACnC,aAAa,QAAQ;AAAA,MACrB,oBAAoB,QAAQ;AAAA,MAC5B,cAAc,QAAQ;AAAA,MACtB,iBAAiB,iBAAiB,QAAQ,eAAe;AAAA,IAC3D,CAAC,EACA,KAAK,aAAa;AAAA,EACvB,WAAW,QAAQ,SAAS,0BAA0B;AACpD,WACG,MAAM;AAAA,MACL,MAAM,iBAAiB,QAAQ,IAAI;AAAA,MACnC,cAAc,QAAQ;AAAA,MACtB,qBAAqB,QAAQ,kBAAkB;AAAA,MAC/C,eAAe,QAAQ;AAAA,MACvB,cAAc,QAAQ;AAAA,MACtB,mBAAmB,iBAAiB,QAAQ,eAAe;AAAA,IAC7D,CAAC,EACA,KAAK,uBAAuB;AAAA,EACjC,WAAW,QAAQ,SAAS,eAAe;AACzC,WACG,MAAM;AAAA,MACL,MAAM,iBAAiB,QAAQ,IAAI;AAAA,MACnC,eAAe,QAAQ;AAAA,IACzB,CAAC,EACA,KAAK,aAAa;AAAA,EACvB,WAAW,QAAQ,SAAS,eAAe;AACzC,WACG,MAAM;AAAA,MACL,wBAAwB,iBAAiB,QAAQ,mBAAmB;AAAA,MACpE,qBAAqB,iBAAiB,QAAQ,kBAAkB;AAAA,IAClE,CAAC,EACA,KAAK,aAAa;AAAA,EACvB,WAAW,QAAQ,SAAS,eAAe;AACzC,WACG,MAAM;AAAA,MACL,eAAe,QAAQ;AAAA,IACzB,CAAC,EACA,KAAK,aAAa;AAAA,EACvB;AACF;","names":[]}