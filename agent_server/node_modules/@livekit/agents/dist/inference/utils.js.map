{"version":3,"sources":["../../src/inference/utils.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2025 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { AccessToken } from 'livekit-server-sdk';\nimport { WebSocket } from 'ws';\nimport { APIConnectionError, APIStatusError } from '../index.js';\n\nexport type AnyString = string & NonNullable<unknown>;\n\nexport async function createAccessToken(\n  apiKey: string,\n  apiSecret: string,\n  ttl: number = 600,\n): Promise<string> {\n  const token = new AccessToken(apiKey, apiSecret, { identity: 'agent', ttl });\n  token.addInferenceGrant({ perform: true });\n\n  return await token.toJwt();\n}\n\nexport async function connectWs(\n  url: string,\n  headers: Record<string, string>,\n  timeoutMs: number,\n): Promise<WebSocket> {\n  return new Promise<WebSocket>((resolve, reject) => {\n    const socket = new WebSocket(url, { headers: headers });\n\n    const timeout = setTimeout(() => {\n      reject(new APIConnectionError({ message: 'Timeout connecting to LiveKit WebSocket' }));\n    }, timeoutMs);\n\n    const onOpen = () => {\n      clearTimeout(timeout);\n      resolve(socket);\n    };\n\n    const onError = (err: unknown) => {\n      clearTimeout(timeout);\n      if (err && typeof err === 'object' && 'code' in err && (err as any).code === 429) {\n        reject(\n          new APIStatusError({\n            message: 'LiveKit gateway quota exceeded',\n            options: { statusCode: 429 },\n          }),\n        );\n      } else {\n        reject(new APIConnectionError({ message: 'Error connecting to LiveKit WebSocket' }));\n      }\n    };\n\n    const onClose = (code: number) => {\n      clearTimeout(timeout);\n      if (code !== 1000) {\n        reject(\n          new APIConnectionError({\n            message: 'Connection closed unexpectedly',\n          }),\n        );\n      }\n    };\n    socket.once('open', onOpen);\n    socket.once('error', onError);\n    socket.once('close', onClose);\n  });\n}\n"],"mappings":"AAGA,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB;AAC1B,SAAS,oBAAoB,sBAAsB;AAInD,eAAsB,kBACpB,QACA,WACA,MAAc,KACG;AACjB,QAAM,QAAQ,IAAI,YAAY,QAAQ,WAAW,EAAE,UAAU,SAAS,IAAI,CAAC;AAC3E,QAAM,kBAAkB,EAAE,SAAS,KAAK,CAAC;AAEzC,SAAO,MAAM,MAAM,MAAM;AAC3B;AAEA,eAAsB,UACpB,KACA,SACA,WACoB;AACpB,SAAO,IAAI,QAAmB,CAAC,SAAS,WAAW;AACjD,UAAM,SAAS,IAAI,UAAU,KAAK,EAAE,QAAiB,CAAC;AAEtD,UAAM,UAAU,WAAW,MAAM;AAC/B,aAAO,IAAI,mBAAmB,EAAE,SAAS,0CAA0C,CAAC,CAAC;AAAA,IACvF,GAAG,SAAS;AAEZ,UAAM,SAAS,MAAM;AACnB,mBAAa,OAAO;AACpB,cAAQ,MAAM;AAAA,IAChB;AAEA,UAAM,UAAU,CAAC,QAAiB;AAChC,mBAAa,OAAO;AACpB,UAAI,OAAO,OAAO,QAAQ,YAAY,UAAU,OAAQ,IAAY,SAAS,KAAK;AAChF;AAAA,UACE,IAAI,eAAe;AAAA,YACjB,SAAS;AAAA,YACT,SAAS,EAAE,YAAY,IAAI;AAAA,UAC7B,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AACL,eAAO,IAAI,mBAAmB,EAAE,SAAS,wCAAwC,CAAC,CAAC;AAAA,MACrF;AAAA,IACF;AAEA,UAAM,UAAU,CAAC,SAAiB;AAChC,mBAAa,OAAO;AACpB,UAAI,SAAS,KAAM;AACjB;AAAA,UACE,IAAI,mBAAmB;AAAA,YACrB,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK,QAAQ,MAAM;AAC1B,WAAO,KAAK,SAAS,OAAO;AAC5B,WAAO,KAAK,SAAS,OAAO;AAAA,EAC9B,CAAC;AACH;","names":[]}