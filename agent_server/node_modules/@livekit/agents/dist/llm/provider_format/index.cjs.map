{"version":3,"sources":["../../../src/llm/provider_format/index.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2025 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { ChatContext } from '../chat_context.js';\nimport { toChatCtx as toChatCtxGoogle } from './google.js';\nimport { toChatCtx as toChatCtxOpenai } from './openai.js';\n\nexport type ProviderFormat = 'openai' | 'google';\n\nexport async function toChatCtx(\n  format: ProviderFormat,\n  chatCtx: ChatContext,\n  injectDummyUserMessage: boolean = true,\n) {\n  switch (format) {\n    case 'openai':\n      return await toChatCtxOpenai(chatCtx, injectDummyUserMessage);\n    case 'google':\n      return await toChatCtxGoogle(chatCtx, injectDummyUserMessage);\n    default:\n      throw new Error(`Unsupported provider format: ${format}`);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,oBAA6C;AAC7C,oBAA6C;AAI7C,eAAsB,UACpB,QACA,SACA,yBAAkC,MAClC;AACA,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,aAAO,UAAM,cAAAA,WAAgB,SAAS,sBAAsB;AAAA,IAC9D,KAAK;AACH,aAAO,UAAM,cAAAC,WAAgB,SAAS,sBAAsB;AAAA,IAC9D;AACE,YAAM,IAAI,MAAM,gCAAgC,MAAM,EAAE;AAAA,EAC5D;AACF;","names":["toChatCtxOpenai","toChatCtxGoogle"]}