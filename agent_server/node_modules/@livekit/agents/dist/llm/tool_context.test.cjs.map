{"version":3,"sources":["../../src/llm/tool_context.test.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { describe, expect, it } from 'vitest';\nimport { z } from 'zod';\nimport { type ToolOptions, tool } from './tool_context.js';\nimport { createToolOptions, oaiParams } from './utils.js';\n\ndescribe('Tool Context', () => {\n  describe('oaiParams', () => {\n    it('should handle basic object schema', () => {\n      const schema = z.object({\n        name: z.string().describe('The user name'),\n        age: z.number().describe('The user age'),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n\n    it('should handle enum fields', () => {\n      const schema = z.object({\n        color: z.enum(['red', 'blue', 'green']).describe('Choose a color'),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n\n    it('should handle array fields', () => {\n      const schema = z.object({\n        tags: z.array(z.string()).describe('List of tags'),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n\n    it('should handle array of enums', () => {\n      const schema = z.object({\n        colors: z.array(z.enum(['red', 'blue', 'green'])).describe('List of colors'),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n\n    it('should handle optional fields', () => {\n      const schema = z.object({\n        name: z.string().describe('The user name'),\n        age: z.number().optional().describe('The user age'),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n\n    it('should handle fields without descriptions', () => {\n      const schema = z.object({\n        name: z.string(),\n        age: z.number(),\n      });\n\n      const result = oaiParams(schema);\n\n      expect(result).toMatchSnapshot();\n    });\n  });\n\n  describe('tool', () => {\n    it('should create and execute a basic core tool', async () => {\n      const getWeather = tool({\n        description: 'Get the weather for a given location',\n        parameters: z.object({\n          location: z.string(),\n        }),\n        execute: async ({ location }, { ctx }: ToolOptions<{ name: string }>) => {\n          return `The weather in ${location} is sunny, ${ctx.userData.name}`;\n        },\n      });\n\n      const result = await getWeather.execute(\n        { location: 'San Francisco' },\n        createToolOptions('123', { name: 'John' }),\n      );\n      expect(result).toBe('The weather in San Francisco is sunny, John');\n    });\n\n    it('should properly type a callable function', async () => {\n      const testFunction = tool({\n        description: 'Test function',\n        parameters: z.object({\n          name: z.string().describe('The user name'),\n          age: z.number().describe('The user age'),\n        }),\n        execute: async (args) => {\n          return `${args.name} is ${args.age} years old`;\n        },\n      });\n\n      const result = await testFunction.execute(\n        { name: 'John', age: 30 },\n        createToolOptions('123'),\n      );\n      expect(result).toBe('John is 30 years old');\n    });\n\n    it('should handle async execution', async () => {\n      const testFunction = tool({\n        description: 'Async test function',\n        parameters: z.object({\n          delay: z.number().describe('Delay in milliseconds'),\n        }),\n        execute: async (args) => {\n          await new Promise((resolve) => setTimeout(resolve, args.delay));\n          return args.delay;\n        },\n      });\n\n      const start = Date.now();\n      const result = await testFunction.execute({ delay: 100 }, createToolOptions('123'));\n      const duration = Date.now() - start;\n\n      expect(result).toBe(100);\n      expect(duration).toBeGreaterThanOrEqual(95); // Allow for small timing variations\n    });\n\n    describe('nested array support', () => {\n      it('should handle nested array fields', () => {\n        const schema = z.object({\n          items: z.array(\n            z.object({\n              name: z.string().describe('the item name'),\n              modifiers: z\n                .array(\n                  z.object({\n                    modifier_name: z.string(),\n                    modifier_value: z.string(),\n                  }),\n                )\n                .describe('list of the modifiers applied on this item, such as size'),\n            }),\n          ),\n        });\n        const result = oaiParams(schema);\n        expect(result).toMatchSnapshot();\n      });\n    });\n\n    describe('optional parameters', () => {\n      it('should create a tool without parameters', async () => {\n        const simpleAction = tool({\n          description: 'Perform a simple action',\n          execute: async () => {\n            return 'Action performed';\n          },\n        });\n\n        expect(simpleAction.type).toBe('function');\n        expect(simpleAction.description).toBe('Perform a simple action');\n        expect(simpleAction.parameters).toBeDefined();\n        expect(simpleAction.parameters._def.typeName).toBe('ZodObject');\n\n        const result = await simpleAction.execute({}, createToolOptions('123'));\n        expect(result).toBe('Action performed');\n      });\n\n      it('should handle tools with context but no parameters', async () => {\n        const greetUser = tool({\n          description: 'Greet the current user',\n          execute: async (_, { ctx }: ToolOptions<{ username: string }>) => {\n            return `Hello, ${ctx.userData.username}!`;\n          },\n        });\n\n        const result = await greetUser.execute({}, createToolOptions('123', { username: 'Alice' }));\n        expect(result).toBe('Hello, Alice!');\n      });\n\n      it('should create a tool that accesses tool call id without parameters', async () => {\n        const getCallId = tool({\n          description: 'Get the current tool call ID',\n          execute: async (_, { toolCallId }) => {\n            return `Tool call ID: ${toolCallId}`;\n          },\n        });\n\n        const result = await getCallId.execute({}, createToolOptions('test-id-456'));\n        expect(result).toBe('Tool call ID: test-id-456');\n      });\n    });\n  });\n});\n"],"mappings":";AAGA,oBAAqC;AACrC,iBAAkB;AAClB,0BAAuC;AACvC,mBAA6C;AAAA,IAE7C,wBAAS,gBAAgB,MAAM;AAC7B,8BAAS,aAAa,MAAM;AAC1B,0BAAG,qCAAqC,MAAM;AAC5C,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,MAAM,aAAE,OAAO,EAAE,SAAS,eAAe;AAAA,QACzC,KAAK,aAAE,OAAO,EAAE,SAAS,cAAc;AAAA,MACzC,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAED,0BAAG,6BAA6B,MAAM;AACpC,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,OAAO,aAAE,KAAK,CAAC,OAAO,QAAQ,OAAO,CAAC,EAAE,SAAS,gBAAgB;AAAA,MACnE,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAED,0BAAG,8BAA8B,MAAM;AACrC,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,MAAM,aAAE,MAAM,aAAE,OAAO,CAAC,EAAE,SAAS,cAAc;AAAA,MACnD,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAED,0BAAG,gCAAgC,MAAM;AACvC,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,QAAQ,aAAE,MAAM,aAAE,KAAK,CAAC,OAAO,QAAQ,OAAO,CAAC,CAAC,EAAE,SAAS,gBAAgB;AAAA,MAC7E,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAED,0BAAG,iCAAiC,MAAM;AACxC,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,MAAM,aAAE,OAAO,EAAE,SAAS,eAAe;AAAA,QACzC,KAAK,aAAE,OAAO,EAAE,SAAS,EAAE,SAAS,cAAc;AAAA,MACpD,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAED,0BAAG,6CAA6C,MAAM;AACpD,YAAM,SAAS,aAAE,OAAO;AAAA,QACtB,MAAM,aAAE,OAAO;AAAA,QACf,KAAK,aAAE,OAAO;AAAA,MAChB,CAAC;AAED,YAAM,aAAS,wBAAU,MAAM;AAE/B,gCAAO,MAAM,EAAE,gBAAgB;AAAA,IACjC,CAAC;AAAA,EACH,CAAC;AAED,8BAAS,QAAQ,MAAM;AACrB,0BAAG,+CAA+C,YAAY;AAC5D,YAAM,iBAAa,0BAAK;AAAA,QACtB,aAAa;AAAA,QACb,YAAY,aAAE,OAAO;AAAA,UACnB,UAAU,aAAE,OAAO;AAAA,QACrB,CAAC;AAAA,QACD,SAAS,OAAO,EAAE,SAAS,GAAG,EAAE,IAAI,MAAqC;AACvE,iBAAO,kBAAkB,QAAQ,cAAc,IAAI,SAAS,IAAI;AAAA,QAClE;AAAA,MACF,CAAC;AAED,YAAM,SAAS,MAAM,WAAW;AAAA,QAC9B,EAAE,UAAU,gBAAgB;AAAA,YAC5B,gCAAkB,OAAO,EAAE,MAAM,OAAO,CAAC;AAAA,MAC3C;AACA,gCAAO,MAAM,EAAE,KAAK,6CAA6C;AAAA,IACnE,CAAC;AAED,0BAAG,4CAA4C,YAAY;AACzD,YAAM,mBAAe,0BAAK;AAAA,QACxB,aAAa;AAAA,QACb,YAAY,aAAE,OAAO;AAAA,UACnB,MAAM,aAAE,OAAO,EAAE,SAAS,eAAe;AAAA,UACzC,KAAK,aAAE,OAAO,EAAE,SAAS,cAAc;AAAA,QACzC,CAAC;AAAA,QACD,SAAS,OAAO,SAAS;AACvB,iBAAO,GAAG,KAAK,IAAI,OAAO,KAAK,GAAG;AAAA,QACpC;AAAA,MACF,CAAC;AAED,YAAM,SAAS,MAAM,aAAa;AAAA,QAChC,EAAE,MAAM,QAAQ,KAAK,GAAG;AAAA,YACxB,gCAAkB,KAAK;AAAA,MACzB;AACA,gCAAO,MAAM,EAAE,KAAK,sBAAsB;AAAA,IAC5C,CAAC;AAED,0BAAG,iCAAiC,YAAY;AAC9C,YAAM,mBAAe,0BAAK;AAAA,QACxB,aAAa;AAAA,QACb,YAAY,aAAE,OAAO;AAAA,UACnB,OAAO,aAAE,OAAO,EAAE,SAAS,uBAAuB;AAAA,QACpD,CAAC;AAAA,QACD,SAAS,OAAO,SAAS;AACvB,gBAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,KAAK,KAAK,CAAC;AAC9D,iBAAO,KAAK;AAAA,QACd;AAAA,MACF,CAAC;AAED,YAAM,QAAQ,KAAK,IAAI;AACvB,YAAM,SAAS,MAAM,aAAa,QAAQ,EAAE,OAAO,IAAI,OAAG,gCAAkB,KAAK,CAAC;AAClF,YAAM,WAAW,KAAK,IAAI,IAAI;AAE9B,gCAAO,MAAM,EAAE,KAAK,GAAG;AACvB,gCAAO,QAAQ,EAAE,uBAAuB,EAAE;AAAA,IAC5C,CAAC;AAED,gCAAS,wBAAwB,MAAM;AACrC,4BAAG,qCAAqC,MAAM;AAC5C,cAAM,SAAS,aAAE,OAAO;AAAA,UACtB,OAAO,aAAE;AAAA,YACP,aAAE,OAAO;AAAA,cACP,MAAM,aAAE,OAAO,EAAE,SAAS,eAAe;AAAA,cACzC,WAAW,aACR;AAAA,gBACC,aAAE,OAAO;AAAA,kBACP,eAAe,aAAE,OAAO;AAAA,kBACxB,gBAAgB,aAAE,OAAO;AAAA,gBAC3B,CAAC;AAAA,cACH,EACC,SAAS,0DAA0D;AAAA,YACxE,CAAC;AAAA,UACH;AAAA,QACF,CAAC;AACD,cAAM,aAAS,wBAAU,MAAM;AAC/B,kCAAO,MAAM,EAAE,gBAAgB;AAAA,MACjC,CAAC;AAAA,IACH,CAAC;AAED,gCAAS,uBAAuB,MAAM;AACpC,4BAAG,2CAA2C,YAAY;AACxD,cAAM,mBAAe,0BAAK;AAAA,UACxB,aAAa;AAAA,UACb,SAAS,YAAY;AACnB,mBAAO;AAAA,UACT;AAAA,QACF,CAAC;AAED,kCAAO,aAAa,IAAI,EAAE,KAAK,UAAU;AACzC,kCAAO,aAAa,WAAW,EAAE,KAAK,yBAAyB;AAC/D,kCAAO,aAAa,UAAU,EAAE,YAAY;AAC5C,kCAAO,aAAa,WAAW,KAAK,QAAQ,EAAE,KAAK,WAAW;AAE9D,cAAM,SAAS,MAAM,aAAa,QAAQ,CAAC,OAAG,gCAAkB,KAAK,CAAC;AACtE,kCAAO,MAAM,EAAE,KAAK,kBAAkB;AAAA,MACxC,CAAC;AAED,4BAAG,sDAAsD,YAAY;AACnE,cAAM,gBAAY,0BAAK;AAAA,UACrB,aAAa;AAAA,UACb,SAAS,OAAO,GAAG,EAAE,IAAI,MAAyC;AAChE,mBAAO,UAAU,IAAI,SAAS,QAAQ;AAAA,UACxC;AAAA,QACF,CAAC;AAED,cAAM,SAAS,MAAM,UAAU,QAAQ,CAAC,OAAG,gCAAkB,OAAO,EAAE,UAAU,QAAQ,CAAC,CAAC;AAC1F,kCAAO,MAAM,EAAE,KAAK,eAAe;AAAA,MACrC,CAAC;AAED,4BAAG,sEAAsE,YAAY;AACnF,cAAM,gBAAY,0BAAK;AAAA,UACrB,aAAa;AAAA,UACb,SAAS,OAAO,GAAG,EAAE,WAAW,MAAM;AACpC,mBAAO,iBAAiB,UAAU;AAAA,UACpC;AAAA,QACF,CAAC;AAED,cAAM,SAAS,MAAM,UAAU,QAAQ,CAAC,OAAG,gCAAkB,aAAa,CAAC;AAC3E,kCAAO,MAAM,EAAE,KAAK,2BAA2B;AAAA,MACjD,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,CAAC;","names":[]}