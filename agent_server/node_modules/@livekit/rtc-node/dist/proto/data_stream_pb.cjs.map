{"version":3,"sources":["../../src/proto/data_stream_pb.ts"],"sourcesContent":["// Copyright 2025 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.1 with parameter \"target=ts,import_extension=.js\"\n// @generated from file data_stream.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto2 } from \"@bufbuild/protobuf\";\nimport { FfiOwnedHandle } from \"./handle_pb.js\";\n\n/**\n * A reader for an incoming stream.\n *\n * @generated from message livekit.proto.OwnedTextStreamReader\n */\nexport class OwnedTextStreamReader extends Message<OwnedTextStreamReader> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TextStreamInfo info = 2;\n   */\n  info?: TextStreamInfo;\n\n  constructor(data?: PartialMessage<OwnedTextStreamReader>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedTextStreamReader\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: TextStreamInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTextStreamReader {\n    return new OwnedTextStreamReader().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTextStreamReader {\n    return new OwnedTextStreamReader().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTextStreamReader {\n    return new OwnedTextStreamReader().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedTextStreamReader | PlainMessage<OwnedTextStreamReader> | undefined, b: OwnedTextStreamReader | PlainMessage<OwnedTextStreamReader> | undefined): boolean {\n    return proto2.util.equals(OwnedTextStreamReader, a, b);\n  }\n}\n\n/**\n * Reads an incoming text stream incrementally.\n *\n * @generated from message livekit.proto.TextStreamReaderReadIncrementalRequest\n */\nexport class TextStreamReaderReadIncrementalRequest extends Message<TextStreamReaderReadIncrementalRequest> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamReaderReadIncrementalRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderReadIncrementalRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderReadIncrementalRequest {\n    return new TextStreamReaderReadIncrementalRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderReadIncrementalRequest {\n    return new TextStreamReaderReadIncrementalRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderReadIncrementalRequest {\n    return new TextStreamReaderReadIncrementalRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderReadIncrementalRequest | PlainMessage<TextStreamReaderReadIncrementalRequest> | undefined, b: TextStreamReaderReadIncrementalRequest | PlainMessage<TextStreamReaderReadIncrementalRequest> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderReadIncrementalRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderReadIncrementalResponse\n */\nexport class TextStreamReaderReadIncrementalResponse extends Message<TextStreamReaderReadIncrementalResponse> {\n  constructor(data?: PartialMessage<TextStreamReaderReadIncrementalResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderReadIncrementalResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderReadIncrementalResponse {\n    return new TextStreamReaderReadIncrementalResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderReadIncrementalResponse {\n    return new TextStreamReaderReadIncrementalResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderReadIncrementalResponse {\n    return new TextStreamReaderReadIncrementalResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderReadIncrementalResponse | PlainMessage<TextStreamReaderReadIncrementalResponse> | undefined, b: TextStreamReaderReadIncrementalResponse | PlainMessage<TextStreamReaderReadIncrementalResponse> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderReadIncrementalResponse, a, b);\n  }\n}\n\n/**\n * Reads an incoming text stream in its entirety.\n *\n * @generated from message livekit.proto.TextStreamReaderReadAllRequest\n */\nexport class TextStreamReaderReadAllRequest extends Message<TextStreamReaderReadAllRequest> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamReaderReadAllRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderReadAllRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderReadAllRequest {\n    return new TextStreamReaderReadAllRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllRequest {\n    return new TextStreamReaderReadAllRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllRequest {\n    return new TextStreamReaderReadAllRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderReadAllRequest | PlainMessage<TextStreamReaderReadAllRequest> | undefined, b: TextStreamReaderReadAllRequest | PlainMessage<TextStreamReaderReadAllRequest> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderReadAllRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderReadAllResponse\n */\nexport class TextStreamReaderReadAllResponse extends Message<TextStreamReaderReadAllResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamReaderReadAllResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderReadAllResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderReadAllResponse {\n    return new TextStreamReaderReadAllResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllResponse {\n    return new TextStreamReaderReadAllResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllResponse {\n    return new TextStreamReaderReadAllResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderReadAllResponse | PlainMessage<TextStreamReaderReadAllResponse> | undefined, b: TextStreamReaderReadAllResponse | PlainMessage<TextStreamReaderReadAllResponse> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderReadAllResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderReadAllCallback\n */\nexport class TextStreamReaderReadAllCallback extends Message<TextStreamReaderReadAllCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.TextStreamReaderReadAllCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: string content = 2;\n     */\n    value: string;\n    case: \"content\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<TextStreamReaderReadAllCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderReadAllCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderReadAllCallback {\n    return new TextStreamReaderReadAllCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllCallback {\n    return new TextStreamReaderReadAllCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderReadAllCallback {\n    return new TextStreamReaderReadAllCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderReadAllCallback | PlainMessage<TextStreamReaderReadAllCallback> | undefined, b: TextStreamReaderReadAllCallback | PlainMessage<TextStreamReaderReadAllCallback> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderReadAllCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderEvent\n */\nexport class TextStreamReaderEvent extends Message<TextStreamReaderEvent> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.TextStreamReaderEvent.detail\n   */\n  detail: {\n    /**\n     * @generated from field: livekit.proto.TextStreamReaderChunkReceived chunk_received = 2;\n     */\n    value: TextStreamReaderChunkReceived;\n    case: \"chunkReceived\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TextStreamReaderEOS eos = 3;\n     */\n    value: TextStreamReaderEOS;\n    case: \"eos\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<TextStreamReaderEvent>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderEvent\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"chunk_received\", kind: \"message\", T: TextStreamReaderChunkReceived, oneof: \"detail\" },\n    { no: 3, name: \"eos\", kind: \"message\", T: TextStreamReaderEOS, oneof: \"detail\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderEvent {\n    return new TextStreamReaderEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderEvent {\n    return new TextStreamReaderEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderEvent {\n    return new TextStreamReaderEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderEvent | PlainMessage<TextStreamReaderEvent> | undefined, b: TextStreamReaderEvent | PlainMessage<TextStreamReaderEvent> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderEvent, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderChunkReceived\n */\nexport class TextStreamReaderChunkReceived extends Message<TextStreamReaderChunkReceived> {\n  /**\n   * @generated from field: required string content = 1;\n   */\n  content?: string;\n\n  constructor(data?: PartialMessage<TextStreamReaderChunkReceived>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderChunkReceived\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderChunkReceived {\n    return new TextStreamReaderChunkReceived().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderChunkReceived {\n    return new TextStreamReaderChunkReceived().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderChunkReceived {\n    return new TextStreamReaderChunkReceived().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderChunkReceived | PlainMessage<TextStreamReaderChunkReceived> | undefined, b: TextStreamReaderChunkReceived | PlainMessage<TextStreamReaderChunkReceived> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderChunkReceived, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamReaderEOS\n */\nexport class TextStreamReaderEOS extends Message<TextStreamReaderEOS> {\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 1;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<TextStreamReaderEOS>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamReaderEOS\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamReaderEOS {\n    return new TextStreamReaderEOS().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamReaderEOS {\n    return new TextStreamReaderEOS().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamReaderEOS {\n    return new TextStreamReaderEOS().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamReaderEOS | PlainMessage<TextStreamReaderEOS> | undefined, b: TextStreamReaderEOS | PlainMessage<TextStreamReaderEOS> | undefined): boolean {\n    return proto2.util.equals(TextStreamReaderEOS, a, b);\n  }\n}\n\n/**\n * A reader for an incoming stream.\n *\n * @generated from message livekit.proto.OwnedByteStreamReader\n */\nexport class OwnedByteStreamReader extends Message<OwnedByteStreamReader> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.ByteStreamInfo info = 2;\n   */\n  info?: ByteStreamInfo;\n\n  constructor(data?: PartialMessage<OwnedByteStreamReader>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedByteStreamReader\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: ByteStreamInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedByteStreamReader {\n    return new OwnedByteStreamReader().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedByteStreamReader {\n    return new OwnedByteStreamReader().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedByteStreamReader {\n    return new OwnedByteStreamReader().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedByteStreamReader | PlainMessage<OwnedByteStreamReader> | undefined, b: OwnedByteStreamReader | PlainMessage<OwnedByteStreamReader> | undefined): boolean {\n    return proto2.util.equals(OwnedByteStreamReader, a, b);\n  }\n}\n\n/**\n * Reads an incoming byte stream incrementally.\n *\n * @generated from message livekit.proto.ByteStreamReaderReadIncrementalRequest\n */\nexport class ByteStreamReaderReadIncrementalRequest extends Message<ByteStreamReaderReadIncrementalRequest> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamReaderReadIncrementalRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderReadIncrementalRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderReadIncrementalRequest {\n    return new ByteStreamReaderReadIncrementalRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderReadIncrementalRequest {\n    return new ByteStreamReaderReadIncrementalRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderReadIncrementalRequest {\n    return new ByteStreamReaderReadIncrementalRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderReadIncrementalRequest | PlainMessage<ByteStreamReaderReadIncrementalRequest> | undefined, b: ByteStreamReaderReadIncrementalRequest | PlainMessage<ByteStreamReaderReadIncrementalRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderReadIncrementalRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderReadIncrementalResponse\n */\nexport class ByteStreamReaderReadIncrementalResponse extends Message<ByteStreamReaderReadIncrementalResponse> {\n  constructor(data?: PartialMessage<ByteStreamReaderReadIncrementalResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderReadIncrementalResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderReadIncrementalResponse {\n    return new ByteStreamReaderReadIncrementalResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderReadIncrementalResponse {\n    return new ByteStreamReaderReadIncrementalResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderReadIncrementalResponse {\n    return new ByteStreamReaderReadIncrementalResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderReadIncrementalResponse | PlainMessage<ByteStreamReaderReadIncrementalResponse> | undefined, b: ByteStreamReaderReadIncrementalResponse | PlainMessage<ByteStreamReaderReadIncrementalResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderReadIncrementalResponse, a, b);\n  }\n}\n\n/**\n * Reads an incoming byte stream in its entirety.\n *\n * @generated from message livekit.proto.ByteStreamReaderReadAllRequest\n */\nexport class ByteStreamReaderReadAllRequest extends Message<ByteStreamReaderReadAllRequest> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamReaderReadAllRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderReadAllRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderReadAllRequest {\n    return new ByteStreamReaderReadAllRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllRequest {\n    return new ByteStreamReaderReadAllRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllRequest {\n    return new ByteStreamReaderReadAllRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderReadAllRequest | PlainMessage<ByteStreamReaderReadAllRequest> | undefined, b: ByteStreamReaderReadAllRequest | PlainMessage<ByteStreamReaderReadAllRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderReadAllRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderReadAllResponse\n */\nexport class ByteStreamReaderReadAllResponse extends Message<ByteStreamReaderReadAllResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamReaderReadAllResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderReadAllResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderReadAllResponse {\n    return new ByteStreamReaderReadAllResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllResponse {\n    return new ByteStreamReaderReadAllResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllResponse {\n    return new ByteStreamReaderReadAllResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderReadAllResponse | PlainMessage<ByteStreamReaderReadAllResponse> | undefined, b: ByteStreamReaderReadAllResponse | PlainMessage<ByteStreamReaderReadAllResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderReadAllResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderReadAllCallback\n */\nexport class ByteStreamReaderReadAllCallback extends Message<ByteStreamReaderReadAllCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.ByteStreamReaderReadAllCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: bytes content = 2;\n     */\n    value: Uint8Array;\n    case: \"content\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<ByteStreamReaderReadAllCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderReadAllCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"content\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderReadAllCallback {\n    return new ByteStreamReaderReadAllCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllCallback {\n    return new ByteStreamReaderReadAllCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderReadAllCallback {\n    return new ByteStreamReaderReadAllCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderReadAllCallback | PlainMessage<ByteStreamReaderReadAllCallback> | undefined, b: ByteStreamReaderReadAllCallback | PlainMessage<ByteStreamReaderReadAllCallback> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderReadAllCallback, a, b);\n  }\n}\n\n/**\n * Writes data from an incoming stream to a file as it arrives.\n *\n * @generated from message livekit.proto.ByteStreamReaderWriteToFileRequest\n */\nexport class ByteStreamReaderWriteToFileRequest extends Message<ByteStreamReaderWriteToFileRequest> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  /**\n   * Directory to write the file in (must be writable by the current process).\n   * If not provided, the file will be written to the system's temp directory.\n   *\n   * @generated from field: optional string directory = 3;\n   */\n  directory?: string;\n\n  /**\n   * Name to use for the written file.\n   * If not provided, the file's name and extension will be inferred from\n   * the stream's info.\n   *\n   * @generated from field: optional string name_override = 4;\n   */\n  nameOverride?: string;\n\n  constructor(data?: PartialMessage<ByteStreamReaderWriteToFileRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderWriteToFileRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 3, name: \"directory\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"name_override\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderWriteToFileRequest {\n    return new ByteStreamReaderWriteToFileRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileRequest {\n    return new ByteStreamReaderWriteToFileRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileRequest {\n    return new ByteStreamReaderWriteToFileRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderWriteToFileRequest | PlainMessage<ByteStreamReaderWriteToFileRequest> | undefined, b: ByteStreamReaderWriteToFileRequest | PlainMessage<ByteStreamReaderWriteToFileRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderWriteToFileRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderWriteToFileResponse\n */\nexport class ByteStreamReaderWriteToFileResponse extends Message<ByteStreamReaderWriteToFileResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamReaderWriteToFileResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderWriteToFileResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderWriteToFileResponse {\n    return new ByteStreamReaderWriteToFileResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileResponse {\n    return new ByteStreamReaderWriteToFileResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileResponse {\n    return new ByteStreamReaderWriteToFileResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderWriteToFileResponse | PlainMessage<ByteStreamReaderWriteToFileResponse> | undefined, b: ByteStreamReaderWriteToFileResponse | PlainMessage<ByteStreamReaderWriteToFileResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderWriteToFileResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderWriteToFileCallback\n */\nexport class ByteStreamReaderWriteToFileCallback extends Message<ByteStreamReaderWriteToFileCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.ByteStreamReaderWriteToFileCallback.result\n   */\n  result: {\n    /**\n     * Path the file was written to.\n     *\n     * @generated from field: string file_path = 2;\n     */\n    value: string;\n    case: \"filePath\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<ByteStreamReaderWriteToFileCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderWriteToFileCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"file_path\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderWriteToFileCallback {\n    return new ByteStreamReaderWriteToFileCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileCallback {\n    return new ByteStreamReaderWriteToFileCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderWriteToFileCallback {\n    return new ByteStreamReaderWriteToFileCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderWriteToFileCallback | PlainMessage<ByteStreamReaderWriteToFileCallback> | undefined, b: ByteStreamReaderWriteToFileCallback | PlainMessage<ByteStreamReaderWriteToFileCallback> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderWriteToFileCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderEvent\n */\nexport class ByteStreamReaderEvent extends Message<ByteStreamReaderEvent> {\n  /**\n   * @generated from field: required uint64 reader_handle = 1;\n   */\n  readerHandle?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.ByteStreamReaderEvent.detail\n   */\n  detail: {\n    /**\n     * @generated from field: livekit.proto.ByteStreamReaderChunkReceived chunk_received = 2;\n     */\n    value: ByteStreamReaderChunkReceived;\n    case: \"chunkReceived\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ByteStreamReaderEOS eos = 3;\n     */\n    value: ByteStreamReaderEOS;\n    case: \"eos\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<ByteStreamReaderEvent>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderEvent\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"reader_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"chunk_received\", kind: \"message\", T: ByteStreamReaderChunkReceived, oneof: \"detail\" },\n    { no: 3, name: \"eos\", kind: \"message\", T: ByteStreamReaderEOS, oneof: \"detail\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderEvent {\n    return new ByteStreamReaderEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderEvent {\n    return new ByteStreamReaderEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderEvent {\n    return new ByteStreamReaderEvent().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderEvent | PlainMessage<ByteStreamReaderEvent> | undefined, b: ByteStreamReaderEvent | PlainMessage<ByteStreamReaderEvent> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderEvent, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderChunkReceived\n */\nexport class ByteStreamReaderChunkReceived extends Message<ByteStreamReaderChunkReceived> {\n  /**\n   * @generated from field: required bytes content = 1;\n   */\n  content?: Uint8Array;\n\n  constructor(data?: PartialMessage<ByteStreamReaderChunkReceived>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderChunkReceived\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"content\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderChunkReceived {\n    return new ByteStreamReaderChunkReceived().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderChunkReceived {\n    return new ByteStreamReaderChunkReceived().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderChunkReceived {\n    return new ByteStreamReaderChunkReceived().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderChunkReceived | PlainMessage<ByteStreamReaderChunkReceived> | undefined, b: ByteStreamReaderChunkReceived | PlainMessage<ByteStreamReaderChunkReceived> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderChunkReceived, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamReaderEOS\n */\nexport class ByteStreamReaderEOS extends Message<ByteStreamReaderEOS> {\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 1;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<ByteStreamReaderEOS>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamReaderEOS\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamReaderEOS {\n    return new ByteStreamReaderEOS().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamReaderEOS {\n    return new ByteStreamReaderEOS().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamReaderEOS {\n    return new ByteStreamReaderEOS().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamReaderEOS | PlainMessage<ByteStreamReaderEOS> | undefined, b: ByteStreamReaderEOS | PlainMessage<ByteStreamReaderEOS> | undefined): boolean {\n    return proto2.util.equals(ByteStreamReaderEOS, a, b);\n  }\n}\n\n/**\n * Sends the contents of a file over a data stream.\n *\n * @generated from message livekit.proto.StreamSendFileRequest\n */\nexport class StreamSendFileRequest extends Message<StreamSendFileRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.StreamByteOptions options = 2;\n   */\n  options?: StreamByteOptions;\n\n  /**\n   * Path of the file to send (must be readable by the current process).\n   *\n   * @generated from field: required string file_path = 3;\n   */\n  filePath?: string;\n\n  constructor(data?: PartialMessage<StreamSendFileRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendFileRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"options\", kind: \"message\", T: StreamByteOptions, req: true },\n    { no: 3, name: \"file_path\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendFileRequest {\n    return new StreamSendFileRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendFileRequest {\n    return new StreamSendFileRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendFileRequest {\n    return new StreamSendFileRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendFileRequest | PlainMessage<StreamSendFileRequest> | undefined, b: StreamSendFileRequest | PlainMessage<StreamSendFileRequest> | undefined): boolean {\n    return proto2.util.equals(StreamSendFileRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamSendFileResponse\n */\nexport class StreamSendFileResponse extends Message<StreamSendFileResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<StreamSendFileResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendFileResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendFileResponse {\n    return new StreamSendFileResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendFileResponse {\n    return new StreamSendFileResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendFileResponse {\n    return new StreamSendFileResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendFileResponse | PlainMessage<StreamSendFileResponse> | undefined, b: StreamSendFileResponse | PlainMessage<StreamSendFileResponse> | undefined): boolean {\n    return proto2.util.equals(StreamSendFileResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamSendFileCallback\n */\nexport class StreamSendFileCallback extends Message<StreamSendFileCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.StreamSendFileCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: livekit.proto.ByteStreamInfo info = 2;\n     */\n    value: ByteStreamInfo;\n    case: \"info\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<StreamSendFileCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendFileCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: ByteStreamInfo, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendFileCallback {\n    return new StreamSendFileCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendFileCallback {\n    return new StreamSendFileCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendFileCallback {\n    return new StreamSendFileCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendFileCallback | PlainMessage<StreamSendFileCallback> | undefined, b: StreamSendFileCallback | PlainMessage<StreamSendFileCallback> | undefined): boolean {\n    return proto2.util.equals(StreamSendFileCallback, a, b);\n  }\n}\n\n/**\n * Sends text over a data stream.\n *\n * @generated from message livekit.proto.StreamSendTextRequest\n */\nexport class StreamSendTextRequest extends Message<StreamSendTextRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.StreamTextOptions options = 2;\n   */\n  options?: StreamTextOptions;\n\n  /**\n   * Text to send.\n   *\n   * @generated from field: required string text = 3;\n   */\n  text?: string;\n\n  constructor(data?: PartialMessage<StreamSendTextRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendTextRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"options\", kind: \"message\", T: StreamTextOptions, req: true },\n    { no: 3, name: \"text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendTextRequest {\n    return new StreamSendTextRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendTextRequest {\n    return new StreamSendTextRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendTextRequest {\n    return new StreamSendTextRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendTextRequest | PlainMessage<StreamSendTextRequest> | undefined, b: StreamSendTextRequest | PlainMessage<StreamSendTextRequest> | undefined): boolean {\n    return proto2.util.equals(StreamSendTextRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamSendTextResponse\n */\nexport class StreamSendTextResponse extends Message<StreamSendTextResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<StreamSendTextResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendTextResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendTextResponse {\n    return new StreamSendTextResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendTextResponse {\n    return new StreamSendTextResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendTextResponse {\n    return new StreamSendTextResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendTextResponse | PlainMessage<StreamSendTextResponse> | undefined, b: StreamSendTextResponse | PlainMessage<StreamSendTextResponse> | undefined): boolean {\n    return proto2.util.equals(StreamSendTextResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamSendTextCallback\n */\nexport class StreamSendTextCallback extends Message<StreamSendTextCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.StreamSendTextCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: livekit.proto.TextStreamInfo info = 2;\n     */\n    value: TextStreamInfo;\n    case: \"info\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<StreamSendTextCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamSendTextCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: TextStreamInfo, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamSendTextCallback {\n    return new StreamSendTextCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamSendTextCallback {\n    return new StreamSendTextCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamSendTextCallback {\n    return new StreamSendTextCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamSendTextCallback | PlainMessage<StreamSendTextCallback> | undefined, b: StreamSendTextCallback | PlainMessage<StreamSendTextCallback> | undefined): boolean {\n    return proto2.util.equals(StreamSendTextCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedByteStreamWriter\n */\nexport class OwnedByteStreamWriter extends Message<OwnedByteStreamWriter> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.ByteStreamInfo info = 2;\n   */\n  info?: ByteStreamInfo;\n\n  constructor(data?: PartialMessage<OwnedByteStreamWriter>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedByteStreamWriter\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: ByteStreamInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedByteStreamWriter {\n    return new OwnedByteStreamWriter().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedByteStreamWriter {\n    return new OwnedByteStreamWriter().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedByteStreamWriter {\n    return new OwnedByteStreamWriter().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedByteStreamWriter | PlainMessage<OwnedByteStreamWriter> | undefined, b: OwnedByteStreamWriter | PlainMessage<OwnedByteStreamWriter> | undefined): boolean {\n    return proto2.util.equals(OwnedByteStreamWriter, a, b);\n  }\n}\n\n/**\n * Opens an outgoing stream.\n * Call must be balanced with a StreamCloseRequest.\n *\n * @generated from message livekit.proto.ByteStreamOpenRequest\n */\nexport class ByteStreamOpenRequest extends Message<ByteStreamOpenRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * Options to use for opening the stream.\n   *\n   * @generated from field: required livekit.proto.StreamByteOptions options = 2;\n   */\n  options?: StreamByteOptions;\n\n  constructor(data?: PartialMessage<ByteStreamOpenRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamOpenRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"options\", kind: \"message\", T: StreamByteOptions, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamOpenRequest {\n    return new ByteStreamOpenRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamOpenRequest {\n    return new ByteStreamOpenRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamOpenRequest {\n    return new ByteStreamOpenRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamOpenRequest | PlainMessage<ByteStreamOpenRequest> | undefined, b: ByteStreamOpenRequest | PlainMessage<ByteStreamOpenRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamOpenRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamOpenResponse\n */\nexport class ByteStreamOpenResponse extends Message<ByteStreamOpenResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamOpenResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamOpenResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamOpenResponse {\n    return new ByteStreamOpenResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamOpenResponse {\n    return new ByteStreamOpenResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamOpenResponse {\n    return new ByteStreamOpenResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamOpenResponse | PlainMessage<ByteStreamOpenResponse> | undefined, b: ByteStreamOpenResponse | PlainMessage<ByteStreamOpenResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamOpenResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamOpenCallback\n */\nexport class ByteStreamOpenCallback extends Message<ByteStreamOpenCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.ByteStreamOpenCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: livekit.proto.OwnedByteStreamWriter writer = 2;\n     */\n    value: OwnedByteStreamWriter;\n    case: \"writer\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<ByteStreamOpenCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamOpenCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"writer\", kind: \"message\", T: OwnedByteStreamWriter, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamOpenCallback {\n    return new ByteStreamOpenCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamOpenCallback {\n    return new ByteStreamOpenCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamOpenCallback {\n    return new ByteStreamOpenCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamOpenCallback | PlainMessage<ByteStreamOpenCallback> | undefined, b: ByteStreamOpenCallback | PlainMessage<ByteStreamOpenCallback> | undefined): boolean {\n    return proto2.util.equals(ByteStreamOpenCallback, a, b);\n  }\n}\n\n/**\n * Writes data to a stream writer.\n *\n * @generated from message livekit.proto.ByteStreamWriterWriteRequest\n */\nexport class ByteStreamWriterWriteRequest extends Message<ByteStreamWriterWriteRequest> {\n  /**\n   * @generated from field: required uint64 writer_handle = 1;\n   */\n  writerHandle?: bigint;\n\n  /**\n   * @generated from field: required bytes bytes = 2;\n   */\n  bytes?: Uint8Array;\n\n  constructor(data?: PartialMessage<ByteStreamWriterWriteRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterWriteRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"writer_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"bytes\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterWriteRequest {\n    return new ByteStreamWriterWriteRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteRequest {\n    return new ByteStreamWriterWriteRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteRequest {\n    return new ByteStreamWriterWriteRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterWriteRequest | PlainMessage<ByteStreamWriterWriteRequest> | undefined, b: ByteStreamWriterWriteRequest | PlainMessage<ByteStreamWriterWriteRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterWriteRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamWriterWriteResponse\n */\nexport class ByteStreamWriterWriteResponse extends Message<ByteStreamWriterWriteResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamWriterWriteResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterWriteResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterWriteResponse {\n    return new ByteStreamWriterWriteResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteResponse {\n    return new ByteStreamWriterWriteResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteResponse {\n    return new ByteStreamWriterWriteResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterWriteResponse | PlainMessage<ByteStreamWriterWriteResponse> | undefined, b: ByteStreamWriterWriteResponse | PlainMessage<ByteStreamWriterWriteResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterWriteResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamWriterWriteCallback\n */\nexport class ByteStreamWriterWriteCallback extends Message<ByteStreamWriterWriteCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 2;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<ByteStreamWriterWriteCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterWriteCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterWriteCallback {\n    return new ByteStreamWriterWriteCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteCallback {\n    return new ByteStreamWriterWriteCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterWriteCallback {\n    return new ByteStreamWriterWriteCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterWriteCallback | PlainMessage<ByteStreamWriterWriteCallback> | undefined, b: ByteStreamWriterWriteCallback | PlainMessage<ByteStreamWriterWriteCallback> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterWriteCallback, a, b);\n  }\n}\n\n/**\n * Closes a stream writer.\n *\n * @generated from message livekit.proto.ByteStreamWriterCloseRequest\n */\nexport class ByteStreamWriterCloseRequest extends Message<ByteStreamWriterCloseRequest> {\n  /**\n   * @generated from field: required uint64 writer_handle = 1;\n   */\n  writerHandle?: bigint;\n\n  /**\n   * @generated from field: optional string reason = 2;\n   */\n  reason?: string;\n\n  constructor(data?: PartialMessage<ByteStreamWriterCloseRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterCloseRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"writer_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"reason\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterCloseRequest {\n    return new ByteStreamWriterCloseRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseRequest {\n    return new ByteStreamWriterCloseRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseRequest {\n    return new ByteStreamWriterCloseRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterCloseRequest | PlainMessage<ByteStreamWriterCloseRequest> | undefined, b: ByteStreamWriterCloseRequest | PlainMessage<ByteStreamWriterCloseRequest> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterCloseRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamWriterCloseResponse\n */\nexport class ByteStreamWriterCloseResponse extends Message<ByteStreamWriterCloseResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<ByteStreamWriterCloseResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterCloseResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterCloseResponse {\n    return new ByteStreamWriterCloseResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseResponse {\n    return new ByteStreamWriterCloseResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseResponse {\n    return new ByteStreamWriterCloseResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterCloseResponse | PlainMessage<ByteStreamWriterCloseResponse> | undefined, b: ByteStreamWriterCloseResponse | PlainMessage<ByteStreamWriterCloseResponse> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterCloseResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.ByteStreamWriterCloseCallback\n */\nexport class ByteStreamWriterCloseCallback extends Message<ByteStreamWriterCloseCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 2;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<ByteStreamWriterCloseCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamWriterCloseCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamWriterCloseCallback {\n    return new ByteStreamWriterCloseCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseCallback {\n    return new ByteStreamWriterCloseCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamWriterCloseCallback {\n    return new ByteStreamWriterCloseCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamWriterCloseCallback | PlainMessage<ByteStreamWriterCloseCallback> | undefined, b: ByteStreamWriterCloseCallback | PlainMessage<ByteStreamWriterCloseCallback> | undefined): boolean {\n    return proto2.util.equals(ByteStreamWriterCloseCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.OwnedTextStreamWriter\n */\nexport class OwnedTextStreamWriter extends Message<OwnedTextStreamWriter> {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TextStreamInfo info = 2;\n   */\n  info?: TextStreamInfo;\n\n  constructor(data?: PartialMessage<OwnedTextStreamWriter>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.OwnedTextStreamWriter\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"handle\", kind: \"message\", T: FfiOwnedHandle, req: true },\n    { no: 2, name: \"info\", kind: \"message\", T: TextStreamInfo, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedTextStreamWriter {\n    return new OwnedTextStreamWriter().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedTextStreamWriter {\n    return new OwnedTextStreamWriter().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedTextStreamWriter {\n    return new OwnedTextStreamWriter().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: OwnedTextStreamWriter | PlainMessage<OwnedTextStreamWriter> | undefined, b: OwnedTextStreamWriter | PlainMessage<OwnedTextStreamWriter> | undefined): boolean {\n    return proto2.util.equals(OwnedTextStreamWriter, a, b);\n  }\n}\n\n/**\n * Opens an outgoing text stream.\n * Call must be balanced with a TextStreamCloseRequest.\n *\n * @generated from message livekit.proto.TextStreamOpenRequest\n */\nexport class TextStreamOpenRequest extends Message<TextStreamOpenRequest> {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle?: bigint;\n\n  /**\n   * Options to use for opening the stream.\n   *\n   * @generated from field: required livekit.proto.StreamTextOptions options = 2;\n   */\n  options?: StreamTextOptions;\n\n  constructor(data?: PartialMessage<TextStreamOpenRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamOpenRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"local_participant_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"options\", kind: \"message\", T: StreamTextOptions, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamOpenRequest {\n    return new TextStreamOpenRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamOpenRequest {\n    return new TextStreamOpenRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamOpenRequest {\n    return new TextStreamOpenRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamOpenRequest | PlainMessage<TextStreamOpenRequest> | undefined, b: TextStreamOpenRequest | PlainMessage<TextStreamOpenRequest> | undefined): boolean {\n    return proto2.util.equals(TextStreamOpenRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamOpenResponse\n */\nexport class TextStreamOpenResponse extends Message<TextStreamOpenResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamOpenResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamOpenResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamOpenResponse {\n    return new TextStreamOpenResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamOpenResponse {\n    return new TextStreamOpenResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamOpenResponse {\n    return new TextStreamOpenResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamOpenResponse | PlainMessage<TextStreamOpenResponse> | undefined, b: TextStreamOpenResponse | PlainMessage<TextStreamOpenResponse> | undefined): boolean {\n    return proto2.util.equals(TextStreamOpenResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamOpenCallback\n */\nexport class TextStreamOpenCallback extends Message<TextStreamOpenCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.TextStreamOpenCallback.result\n   */\n  result: {\n    /**\n     * @generated from field: livekit.proto.OwnedTextStreamWriter writer = 2;\n     */\n    value: OwnedTextStreamWriter;\n    case: \"writer\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.StreamError error = 3;\n     */\n    value: StreamError;\n    case: \"error\";\n  } | { case: undefined; value?: undefined } = { case: undefined };\n\n  constructor(data?: PartialMessage<TextStreamOpenCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamOpenCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"writer\", kind: \"message\", T: OwnedTextStreamWriter, oneof: \"result\" },\n    { no: 3, name: \"error\", kind: \"message\", T: StreamError, oneof: \"result\" },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamOpenCallback {\n    return new TextStreamOpenCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamOpenCallback {\n    return new TextStreamOpenCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamOpenCallback {\n    return new TextStreamOpenCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamOpenCallback | PlainMessage<TextStreamOpenCallback> | undefined, b: TextStreamOpenCallback | PlainMessage<TextStreamOpenCallback> | undefined): boolean {\n    return proto2.util.equals(TextStreamOpenCallback, a, b);\n  }\n}\n\n/**\n * Writes text to a text stream writer.\n *\n * @generated from message livekit.proto.TextStreamWriterWriteRequest\n */\nexport class TextStreamWriterWriteRequest extends Message<TextStreamWriterWriteRequest> {\n  /**\n   * @generated from field: required uint64 writer_handle = 1;\n   */\n  writerHandle?: bigint;\n\n  /**\n   * @generated from field: required string text = 2;\n   */\n  text?: string;\n\n  constructor(data?: PartialMessage<TextStreamWriterWriteRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterWriteRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"writer_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterWriteRequest {\n    return new TextStreamWriterWriteRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterWriteRequest {\n    return new TextStreamWriterWriteRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterWriteRequest {\n    return new TextStreamWriterWriteRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterWriteRequest | PlainMessage<TextStreamWriterWriteRequest> | undefined, b: TextStreamWriterWriteRequest | PlainMessage<TextStreamWriterWriteRequest> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterWriteRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamWriterWriteResponse\n */\nexport class TextStreamWriterWriteResponse extends Message<TextStreamWriterWriteResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamWriterWriteResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterWriteResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterWriteResponse {\n    return new TextStreamWriterWriteResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterWriteResponse {\n    return new TextStreamWriterWriteResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterWriteResponse {\n    return new TextStreamWriterWriteResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterWriteResponse | PlainMessage<TextStreamWriterWriteResponse> | undefined, b: TextStreamWriterWriteResponse | PlainMessage<TextStreamWriterWriteResponse> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterWriteResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamWriterWriteCallback\n */\nexport class TextStreamWriterWriteCallback extends Message<TextStreamWriterWriteCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 2;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<TextStreamWriterWriteCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterWriteCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterWriteCallback {\n    return new TextStreamWriterWriteCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterWriteCallback {\n    return new TextStreamWriterWriteCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterWriteCallback {\n    return new TextStreamWriterWriteCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterWriteCallback | PlainMessage<TextStreamWriterWriteCallback> | undefined, b: TextStreamWriterWriteCallback | PlainMessage<TextStreamWriterWriteCallback> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterWriteCallback, a, b);\n  }\n}\n\n/**\n * Closes a text stream writer.\n *\n * @generated from message livekit.proto.TextStreamWriterCloseRequest\n */\nexport class TextStreamWriterCloseRequest extends Message<TextStreamWriterCloseRequest> {\n  /**\n   * @generated from field: required uint64 writer_handle = 1;\n   */\n  writerHandle?: bigint;\n\n  /**\n   * @generated from field: optional string reason = 2;\n   */\n  reason?: string;\n\n  constructor(data?: PartialMessage<TextStreamWriterCloseRequest>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterCloseRequest\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"writer_handle\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"reason\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterCloseRequest {\n    return new TextStreamWriterCloseRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterCloseRequest {\n    return new TextStreamWriterCloseRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterCloseRequest {\n    return new TextStreamWriterCloseRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterCloseRequest | PlainMessage<TextStreamWriterCloseRequest> | undefined, b: TextStreamWriterCloseRequest | PlainMessage<TextStreamWriterCloseRequest> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterCloseRequest, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamWriterCloseResponse\n */\nexport class TextStreamWriterCloseResponse extends Message<TextStreamWriterCloseResponse> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  constructor(data?: PartialMessage<TextStreamWriterCloseResponse>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterCloseResponse\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterCloseResponse {\n    return new TextStreamWriterCloseResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterCloseResponse {\n    return new TextStreamWriterCloseResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterCloseResponse {\n    return new TextStreamWriterCloseResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterCloseResponse | PlainMessage<TextStreamWriterCloseResponse> | undefined, b: TextStreamWriterCloseResponse | PlainMessage<TextStreamWriterCloseResponse> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterCloseResponse, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamWriterCloseCallback\n */\nexport class TextStreamWriterCloseCallback extends Message<TextStreamWriterCloseCallback> {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId?: bigint;\n\n  /**\n   * @generated from field: optional livekit.proto.StreamError error = 2;\n   */\n  error?: StreamError;\n\n  constructor(data?: PartialMessage<TextStreamWriterCloseCallback>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamWriterCloseCallback\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"async_id\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, req: true },\n    { no: 2, name: \"error\", kind: \"message\", T: StreamError, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamWriterCloseCallback {\n    return new TextStreamWriterCloseCallback().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamWriterCloseCallback {\n    return new TextStreamWriterCloseCallback().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamWriterCloseCallback {\n    return new TextStreamWriterCloseCallback().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamWriterCloseCallback | PlainMessage<TextStreamWriterCloseCallback> | undefined, b: TextStreamWriterCloseCallback | PlainMessage<TextStreamWriterCloseCallback> | undefined): boolean {\n    return proto2.util.equals(TextStreamWriterCloseCallback, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.TextStreamInfo\n */\nexport class TextStreamInfo extends Message<TextStreamInfo> {\n  /**\n   * unique identifier for this data stream\n   *\n   * @generated from field: required string stream_id = 1;\n   */\n  streamId?: string;\n\n  /**\n   * using int64 for Unix timestamp\n   *\n   * @generated from field: required int64 timestamp = 2;\n   */\n  timestamp?: bigint;\n\n  /**\n   * @generated from field: required string mime_type = 3;\n   */\n  mimeType?: string;\n\n  /**\n   * @generated from field: required string topic = 4;\n   */\n  topic?: string;\n\n  /**\n   * only populated for finite streams, if it's a stream of unknown size this stays empty\n   *\n   * @generated from field: optional uint64 total_length = 5;\n   */\n  totalLength?: bigint;\n\n  /**\n   * user defined attributes map that can carry additional info\n   *\n   * @generated from field: map<string, string> attributes = 6;\n   */\n  attributes: { [key: string]: string } = {};\n\n  /**\n   * @generated from field: required livekit.proto.TextStreamInfo.OperationType operation_type = 7;\n   */\n  operationType?: TextStreamInfo_OperationType;\n\n  /**\n   * Optional: Version for updates/edits\n   *\n   * @generated from field: optional int32 version = 8;\n   */\n  version?: number;\n\n  /**\n   * Optional: Reply to specific message\n   *\n   * @generated from field: optional string reply_to_stream_id = 9;\n   */\n  replyToStreamId?: string;\n\n  /**\n   * file attachments for text streams\n   *\n   * @generated from field: repeated string attached_stream_ids = 10;\n   */\n  attachedStreamIds: string[] = [];\n\n  /**\n   * true if the text has been generated by an agent from a participant's audio transcription\n   *\n   * @generated from field: optional bool generated = 11;\n   */\n  generated?: boolean;\n\n  constructor(data?: PartialMessage<TextStreamInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.TextStreamInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n    { no: 3, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"total_length\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 6, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 7, name: \"operation_type\", kind: \"enum\", T: proto2.getEnumType(TextStreamInfo_OperationType), req: true },\n    { no: 8, name: \"version\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 9, name: \"reply_to_stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 10, name: \"attached_stream_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 11, name: \"generated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextStreamInfo {\n    return new TextStreamInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextStreamInfo {\n    return new TextStreamInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextStreamInfo {\n    return new TextStreamInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: TextStreamInfo | PlainMessage<TextStreamInfo> | undefined, b: TextStreamInfo | PlainMessage<TextStreamInfo> | undefined): boolean {\n    return proto2.util.equals(TextStreamInfo, a, b);\n  }\n}\n\n/**\n * @generated from enum livekit.proto.TextStreamInfo.OperationType\n */\nexport enum TextStreamInfo_OperationType {\n  /**\n   * @generated from enum value: CREATE = 0;\n   */\n  CREATE = 0,\n\n  /**\n   * @generated from enum value: UPDATE = 1;\n   */\n  UPDATE = 1,\n\n  /**\n   * @generated from enum value: DELETE = 2;\n   */\n  DELETE = 2,\n\n  /**\n   * @generated from enum value: REACTION = 3;\n   */\n  REACTION = 3,\n}\n// Retrieve enum metadata with: proto2.getEnumType(TextStreamInfo_OperationType)\nproto2.util.setEnumType(TextStreamInfo_OperationType, \"livekit.proto.TextStreamInfo.OperationType\", [\n  { no: 0, name: \"CREATE\" },\n  { no: 1, name: \"UPDATE\" },\n  { no: 2, name: \"DELETE\" },\n  { no: 3, name: \"REACTION\" },\n]);\n\n/**\n * @generated from message livekit.proto.ByteStreamInfo\n */\nexport class ByteStreamInfo extends Message<ByteStreamInfo> {\n  /**\n   * unique identifier for this data stream\n   *\n   * @generated from field: required string stream_id = 1;\n   */\n  streamId?: string;\n\n  /**\n   * using int64 for Unix timestamp\n   *\n   * @generated from field: required int64 timestamp = 2;\n   */\n  timestamp?: bigint;\n\n  /**\n   * @generated from field: required string mime_type = 3;\n   */\n  mimeType?: string;\n\n  /**\n   * @generated from field: required string topic = 4;\n   */\n  topic?: string;\n\n  /**\n   * only populated for finite streams, if it's a stream of unknown size this stays empty\n   *\n   * @generated from field: optional uint64 total_length = 5;\n   */\n  totalLength?: bigint;\n\n  /**\n   * user defined attributes map that can carry additional info\n   *\n   * @generated from field: map<string, string> attributes = 6;\n   */\n  attributes: { [key: string]: string } = {};\n\n  /**\n   * @generated from field: required string name = 7;\n   */\n  name?: string;\n\n  constructor(data?: PartialMessage<ByteStreamInfo>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.ByteStreamInfo\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, req: true },\n    { no: 3, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 4, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 5, name: \"total_length\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 6, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 7, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ByteStreamInfo {\n    return new ByteStreamInfo().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ByteStreamInfo {\n    return new ByteStreamInfo().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ByteStreamInfo {\n    return new ByteStreamInfo().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ByteStreamInfo | PlainMessage<ByteStreamInfo> | undefined, b: ByteStreamInfo | PlainMessage<ByteStreamInfo> | undefined): boolean {\n    return proto2.util.equals(ByteStreamInfo, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamTextOptions\n */\nexport class StreamTextOptions extends Message<StreamTextOptions> {\n  /**\n   * @generated from field: required string topic = 1;\n   */\n  topic?: string;\n\n  /**\n   * @generated from field: map<string, string> attributes = 2;\n   */\n  attributes: { [key: string]: string } = {};\n\n  /**\n   * @generated from field: repeated string destination_identities = 3;\n   */\n  destinationIdentities: string[] = [];\n\n  /**\n   * @generated from field: optional string id = 4;\n   */\n  id?: string;\n\n  /**\n   * @generated from field: optional livekit.proto.TextStreamInfo.OperationType operation_type = 5;\n   */\n  operationType?: TextStreamInfo_OperationType;\n\n  /**\n   * @generated from field: optional int32 version = 6;\n   */\n  version?: number;\n\n  /**\n   * @generated from field: optional string reply_to_stream_id = 7;\n   */\n  replyToStreamId?: string;\n\n  /**\n   * @generated from field: repeated string attached_stream_ids = 8;\n   */\n  attachedStreamIds: string[] = [];\n\n  /**\n   * @generated from field: optional bool generated = 9;\n   */\n  generated?: boolean;\n\n  constructor(data?: PartialMessage<StreamTextOptions>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamTextOptions\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 3, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"operation_type\", kind: \"enum\", T: proto2.getEnumType(TextStreamInfo_OperationType), opt: true },\n    { no: 6, name: \"version\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 7, name: \"reply_to_stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"attached_stream_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 9, name: \"generated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamTextOptions {\n    return new StreamTextOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamTextOptions {\n    return new StreamTextOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamTextOptions {\n    return new StreamTextOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamTextOptions | PlainMessage<StreamTextOptions> | undefined, b: StreamTextOptions | PlainMessage<StreamTextOptions> | undefined): boolean {\n    return proto2.util.equals(StreamTextOptions, a, b);\n  }\n}\n\n/**\n * @generated from message livekit.proto.StreamByteOptions\n */\nexport class StreamByteOptions extends Message<StreamByteOptions> {\n  /**\n   * @generated from field: required string topic = 1;\n   */\n  topic?: string;\n\n  /**\n   * @generated from field: map<string, string> attributes = 2;\n   */\n  attributes: { [key: string]: string } = {};\n\n  /**\n   * @generated from field: repeated string destination_identities = 3;\n   */\n  destinationIdentities: string[] = [];\n\n  /**\n   * @generated from field: optional string id = 4;\n   */\n  id?: string;\n\n  /**\n   * @generated from field: optional string name = 5;\n   */\n  name?: string;\n\n  /**\n   * @generated from field: optional string mime_type = 6;\n   */\n  mimeType?: string;\n\n  /**\n   * @generated from field: optional uint64 total_length = 7;\n   */\n  totalLength?: bigint;\n\n  constructor(data?: PartialMessage<StreamByteOptions>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamByteOptions\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 3, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"total_length\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamByteOptions {\n    return new StreamByteOptions().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamByteOptions {\n    return new StreamByteOptions().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamByteOptions {\n    return new StreamByteOptions().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamByteOptions | PlainMessage<StreamByteOptions> | undefined, b: StreamByteOptions | PlainMessage<StreamByteOptions> | undefined): boolean {\n    return proto2.util.equals(StreamByteOptions, a, b);\n  }\n}\n\n/**\n * Error pertaining to a stream.\n *\n * @generated from message livekit.proto.StreamError\n */\nexport class StreamError extends Message<StreamError> {\n  /**\n   * TODO(ladvoc): make this an enum.\n   *\n   * @generated from field: required string description = 1;\n   */\n  description?: string;\n\n  constructor(data?: PartialMessage<StreamError>) {\n    super();\n    proto2.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto2 = proto2;\n  static readonly typeName = \"livekit.proto.StreamError\";\n  static readonly fields: FieldList = proto2.util.newFieldList(() => [\n    { no: 1, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamError {\n    return new StreamError().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamError {\n    return new StreamError().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamError {\n    return new StreamError().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: StreamError | PlainMessage<StreamError> | undefined, b: StreamError | PlainMessage<StreamError> | undefined): boolean {\n    return proto2.util.equals(StreamError, a, b);\n  }\n}\n\n"],"mappings":"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","names":["TextStreamInfo_OperationType"]}