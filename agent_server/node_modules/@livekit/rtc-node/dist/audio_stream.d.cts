import { AudioFrame } from './audio_frame.cjs';
import { Track } from './track.cjs';
import './proto/audio_frame_pb.cjs';
import '@bufbuild/protobuf';
import './proto/track_pb.cjs';
import './proto/stats_pb.cjs';
import './proto/e2ee_pb.cjs';
import './proto/handle_pb.cjs';
import './audio_source.cjs';
import './napi/native.d.cjs';
import './ffi_client.cjs';
import '@livekit/typed-emitter';
import './proto/ffi_pb.cjs';
import './proto/room_pb.cjs';
import './proto/participant_pb.cjs';
import './proto/video_frame_pb.cjs';
import './proto/data_stream_pb.cjs';
import './proto/rpc_pb.cjs';
import './proto/track_publication_pb.cjs';
import './video_source.cjs';
import './video_frame.cjs';

interface AudioStreamOptions {
    noiseCancellation?: NoiseCancellationOptions;
    sampleRate?: number;
    numChannels?: number;
    frameSizeMs?: number;
}
interface NoiseCancellationOptions {
    moduleId: string;
    options: Record<string, any>;
}
declare class AudioStream extends ReadableStream<AudioFrame> {
    constructor(track: Track);
    constructor(track: Track, sampleRate: number);
    constructor(track: Track, sampleRate: number, numChannels: number);
    constructor(track: Track, options: AudioStreamOptions);
}

export { AudioStream, type AudioStreamOptions, type NoiseCancellationOptions };
